#summary a library to visualize and annotate MS spectrum and chromatogram.
#sidebar TableOfContents
 * [#About_mzGraph_Browser About mzGraph Browser]
 * [#Getting_mzGraph_Browser Getting mzGraph Browser]
 * [#Using_mzGraph_Browser Using mzGraph Browser]
 * [#API_Reference API Reference]
 * [#FAQs FAQs]
 * [#Getting_Help Getting Help]
 * [#Source_Code Source Code]
 * [#Screenshots Screenshots]

== About mzGraph Browser ==
*PRIDE mzGraph Browser* is a library for visualzing and annotating MS spectrum and chromatogram interactively. It includes features like:
 * Zoom in/out.
 * Export peak values.
 * Save/Print spectrum and chromatogram as image.
 * Highlight peak m/z and intensity values.
 * Highlight mass differences. 
 * Display fragment ion annotations. 
 * Automatic annotation of amino acid identifications.
 * Filtering on ion series. 
 * Filtering on annotation series

We believe that this library is both easy to learn and to extend. It can be of great use for developing computational proteomics tools.

This library is developed using Java, it uses both jFreeChart and PRIDE utilities library extensively.   

[PRIDEmzGraphBrowser top of page]
----
== Getting mzGraph Browser ==
The zip file in the [http://code.google.com/p/pride-toolsuite/downloads/list downloads section] contains the *PRIDE mzGraph Browser* jar file and all other required libraries.

===Maven Dependency===
*PRIDE mzGraph Browser* library can be used in Maven projects, you can include the following snippets in your Maven pom file. 
{{{
 <dependency>
   <groupId>uk.ac.ebi.pride.mzgraph</groupId>
   <artifactId>pride-mzgraph-browser</artifactId>
   <version>1.0.4</version>
 </dependency> 
}}}

{{{
 <repository>
   <id>ebi-repo</id>
   <name>The EBI internal repository</name>
   <url>http://www.ebi.ac.uk/~maven/m2repo</url>
   <releases>
     <enabled>true</enabled>
   </releases>
   <snapshots>
     <enabled>false</enabled>
   </snapshots>
 </repository>
}}}

*Note*: you need to change the version number to the latest version.

For developers, the latest source code is available from our [#Source_Code SVN repository]. 

[PRIDEmzGraphBrowser top of page]
----
== Using mzGraph Browser ==
PRIDE mzGraph Browser library gives you Java Swing based components for visualizing and annotating MS spectra and chromatogram. 

This library is designed to be integrated into your project easily, and there are two common ways of using it: 
 * *As an independent panel*: use this option if you just want to visulize spectrum or chromatogram or you want to program the user interactions yourself. 
 * *As a panel with a build-in tool bar*: this option provides you with the main visualize panel, in addition, you will also get a out-box tool bar which can be customized to include your own actions. 

====Independent Panel====
The starting point in using PRIDE mzGraph library to visualize spectrum is to create a `SpectrumPanel`. This panel can be added as a component to Java Swing container, and it is the basis of all user interactions. 

The following code shows you how to create an instance of the `SpectrumPanel` and add it to the Swing component in your project: 
{{{
// Create a m/z data array
double[] mzArr = new double[]{1.0, 2.012312313, 3.0, 4.234, 6.0, 7.34342};
// Create an intensity data array
double[] intentArr = new double[]{2.0, 4.345345345, 6.0, 1.4545, 5.0, 8.23423};
// Create a spectrum panel
SpectrumPanel spectrum = new SpectrumPanel(mzArr, intentArr);
// Paint the spectrum peaks
spectrum.paintGraph();
// Added the spectrum panel to your own JPanel
JPanel container = new JPanel(new BorderLayout());
container.add(spectrum, BorderLayout.CENTER);
}}}

Only an array of m/z values and an array of intensity values are required to build a spectrum. You can also overwrite this peak list with a new one, the code below shows you how:
{{{
// New m/z array
double[] newMz = new double[]{2.0, 3.0, 12.23, 1.45};
// New intensity array
double[] newIntent = new double[]{45, 67, 18.34, 34.78};
// Set a new peak list
spectrum.setPeakList(newMz, newIntent);
}}}

After the spectrum has been initialized, you can annotate it with fragment ion information. Below is an example of adding a b ion and a y ion: 
{{{
// Create a new y ion with charge -2 and location 2 as well as a water loss
IonAnnotationInfo yIonInfo = new IonAnnotationInfo();
// Create and add an annotation item which describes the ion.
IonAnnotationInfo.Item yIonItem = new IonAnnotationInfo.Item(-2, FragmentIonType.Y_ION, 2, NeutralLoss.WATER_LOSS);
yIonInfo.addItem(yIonItem);
// Create the y ion
IonAnnotation yIon = new IonAnnotation(2.0, 45, yIonInfo);

// Create a new b ion with charge +1 and location 3
IonAnnotationInfo bIonInfo = new IonAnnotationInfo();
IonAnnotationInfo.Item bIonItem = new IonAnnotationInfo.Item(1, FragmentIonType.B_ION, 3, null);
bIonInfo.addItem(bIonItem);
IonAnnotation bIon = new IonAnnotation(12.23, 18.34, bIonInfo);

// Add these ions to the spectrum
List<IonAnnotation> ions = new ArrayList<IonAnnotation>();
ions.add(ion1);
ions.add(ion2);
spectrum.addFragmentIons(ions);
}}} 
====Panel with a Build-in Tool Bar====
 
[PRIDEmzGraphBrowser top of page]
----
== API Reference ==
To come in the future.

[PRIDEmzGraphBrowser top of page]
----
== FAQs ==
To come in the future.

[PRIDEmzGraphBrowser top of page]
----
== Getting Help ==
If you have questions or need additional help, please contact the PRIDE Helpdesk at the EBI: *pride-helpdesk at ebi.ac.uk (replace at with @)*.

Please send us your feedback, including error reports, improvement suggestions, new feature requests and any other things you might want to suggest to the PRIDE team.

[PRIDEmzGraphBrowser top of page]
----
== Source Code ==
To come in the future.

[PRIDEmzGraphBrowser top of page]
----
== Screenshots ==

[PRIDEmzGraphBrowser top of page]